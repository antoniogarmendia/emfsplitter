[comment encoding = UTF-8 /]
[module labelProviderDRepresentation('http://www.eclipse.org/emf/2002/Ecore')]


[template public generateLabelProviderDRepresentation(anProjectName : String)]
[file ('src/'.concat(anProjectName.toLower() + '.' + getProperty('prefix_name')).replaceAll('\\.','/').concat('/editor/label/LabelProviderDRepresentation.java'),false, 'UTF-8')]
package [anProjectName.toLower()/].[getProperty('prefix_name')/].editor.label;

import org.eclipse.jface.viewers.ILabelProvider;
import org.eclipse.jface.viewers.ILabelProviderListener;
import org.eclipse.sirius.viewpoint.description.Viewpoint;
import org.eclipse.swt.graphics.Image;

public class LabelProviderDRepresentation implements ILabelProvider{

	@Override
	public void addListener(ILabelProviderListener listener) {
		// Do nothing		
	}

	@Override
	public void dispose() {
		// Do nothing		
	}

	@Override
	public boolean isLabelProperty(Object element, String property) {
		// Do nothing
		return false;
	}

	@Override
	public void removeListener(ILabelProviderListener listener) {
		// Do nothing		
	}

	@Override
	public Image getImage(Object element) {
		// Do nothing
		return null;
	}

	@Override
	public String getText(Object element) {
		
		if(element instanceof Viewpoint)
			return ((Viewpoint) element).getName();
		else
			return null;		
	}
}

[/file]

[/template]
